Flat profile:

Each sample counts as 0.01 seconds.
 no time accumulated

  %   cumulative   self              self     total           
 time   seconds   seconds    calls  Ts/call  Ts/call  name    
  0.00      0.00     0.00   122515     0.00     0.00  bool __gnu_cxx::__is_null_pointer<char>(char*)
  0.00      0.00     0.00   122515     0.00     0.00  void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)
  0.00      0.00     0.00   122515     0.00     0.00  std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag)
  0.00      0.00     0.00   122515     0.00     0.00  std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&)
  0.00      0.00     0.00   122515     0.00     0.00  std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*)
  0.00      0.00     0.00    95940     0.00     0.00  clkDifMemLog(timespec, timespec, timespec*)
  0.00      0.00     0.00    94555     0.00     0.00  leMemLog(long, long, int)
  0.00      0.00     0.00    90625     0.00     0.00  Item<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~Item()
  0.00      0.00     0.00    90598     0.00     0.00  Item<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::Item(Item<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
  0.00      0.00     0.00    30228     0.00     0.00  WordOccurence::WordOccurence()
  0.00      0.00     0.00    30171     0.00     0.00  Item<WordOccurence>::Item()
  0.00      0.00     0.00    10027     0.00     0.00  Item<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::Item()
  0.00      0.00     0.00     8090     0.00     0.00  WordOccurence::~WordOccurence()
  0.00      0.00     0.00     7862     0.00     0.00  WordOccurence::WordOccurence(WordOccurence const&)
  0.00      0.00     0.00     6424     0.00     0.00  castChar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
  0.00      0.00     0.00     6171     0.00     0.00  ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::castStringKey(int)
  0.00      0.00     0.00     6171     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned long, char const*, __va_list_tag*), unsigned long, char const*, ...)
  0.00      0.00     0.00     6171     0.00     0.00  void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*)
  0.00      0.00     0.00     6171     0.00     0.00  void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type)
  0.00      0.00     0.00     6171     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<char*, void>(char*, char*, std::allocator<char> const&)
  0.00      0.00     0.00     6171     0.00     0.00  std::__cxx11::to_string(int)
  0.00      0.00     0.00     6144     0.00     0.00  ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::existsByIndex(int)
  0.00      0.00     0.00     6144     0.00     0.00  ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::findIndex(char*, MemoryLogType)
  0.00      0.00     0.00     4662     0.00     0.00  Item<WordOccurence>::~Item()
  0.00      0.00     0.00     4491     0.00     0.00  Item<WordOccurence>::Item(Item<WordOccurence> const&)
  0.00      0.00     0.00     3462     0.00     0.00  isSpecialCharacter(char)
  0.00      0.00     0.00     3427     0.00     0.00  lowerCaseLetter(char)
  0.00      0.00     0.00     3427     0.00     0.00  std::ctype<char>::tolower(char) const
  0.00      0.00     0.00     3427     0.00     0.00  char std::tolower<char>(char, std::locale const&)
  0.00      0.00     0.00     3072     0.00     0.00  getLexicographicalValue(char, ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*)
  0.00      0.00     0.00     3072     0.00     0.00  ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::existsByKey(char*)
  0.00      0.00     0.00     3072     0.00     0.00  ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::existsByKey(int)
  0.00      0.00     0.00     3072     0.00     0.00  ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::getSize()
  0.00      0.00     0.00     3072     0.00     0.00  ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::findByKey(char*)
  0.00      0.00     0.00     3072     0.00     0.00  ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::findByKey(int)
  0.00      0.00     0.00     1596     0.00     0.00  makeLexicographicalComparison(WordOccurence, WordOccurence, ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*)
  0.00      0.00     0.00     1528     0.00     0.00  WordOccurence::operator=(WordOccurence const&)
  0.00      0.00     0.00     1384     0.00     0.00  escreveMemLog(long, long, int)
  0.00      0.00     0.00     1349     0.00     0.00  Item<WordOccurence>::operator=(Item<WordOccurence> const&)
  0.00      0.00     0.00      786     0.00     0.00  __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::base() const
  0.00      0.00     0.00      393     0.00     0.00  bool __gnu_cxx::operator!=<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
  0.00      0.00     0.00      328     0.00     0.00  __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++()
  0.00      0.00     0.00      328     0.00     0.00  __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator*() const
  0.00      0.00     0.00      175     0.00     0.00  ArrangementList<WordOccurence>::getSize()
  0.00      0.00     0.00      171     0.00     0.00  ArrangementList<WordOccurence>::findByIndex(int)
  0.00      0.00     0.00      171     0.00     0.00  ArrangementList<WordOccurence>::create(char*, WordOccurence)
  0.00      0.00     0.00      138     0.00     0.00  ArrangementList<WordOccurence>::findIndex(char*, MemoryLogType)
  0.00      0.00     0.00      130     0.00     0.00  ArrangementList<WordOccurence>::existsByIndex(int)
  0.00      0.00     0.00       94     0.00     0.00  isTextConfig(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
  0.00      0.00     0.00       93     0.00     0.00  defineFaseMemLog(int)
  0.00      0.00     0.00       93     0.00     0.00  isOrderingConfig(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
  0.00      0.00     0.00       65     0.00     0.00  lowerCaseWord(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
  0.00      0.00     0.00       65     0.00     0.00  normalizeWord(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
  0.00      0.00     0.00       65     0.00     0.00  removeSpecialCharacters(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
  0.00      0.00     0.00       65     0.00     0.00  ArrangementList<WordOccurence>::existsByKey(char*)
  0.00      0.00     0.00       65     0.00     0.00  ArrangementList<WordOccurence>::findByKey(char*)
  0.00      0.00     0.00       65     0.00     0.00  LexicographicAnalyser::readWord(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
  0.00      0.00     0.00       27     0.00     0.00  ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::create(char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
  0.00      0.00     0.00       27     0.00     0.00  ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::create(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
  0.00      0.00     0.00       27     0.00     0.00  LexicographicAnalyser::readOrdering(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
  0.00      0.00     0.00       27     0.00     0.00  Item<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator=(Item<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
  0.00      0.00     0.00        8     0.00     0.00  ArrangementList<WordOccurence>::update(char*, WordOccurence)
  0.00      0.00     0.00        3     0.00     0.00  ArrangementList<WordOccurence>::ArrangementList()
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z13normalizeWordNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z16isOrderingConfigNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z8castCharNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z9parseArgsiPPc
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN21LexicographicAnalyserC2Ev
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I_main
  0.00      0.00     0.00        1     0.00     0.00  ativaMemLog()
  0.00      0.00     0.00        1     0.00     0.00  iniciaMemLog(char*)
  0.00      0.00     0.00        1     0.00     0.00  finalizaMemLog()
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  parseArgs(int, char**)
  0.00      0.00     0.00        1     0.00     0.00  ArrangementList<WordOccurence>::sort(bool (*)(WordOccurence, WordOccurence, ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*), ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, int, int)
  0.00      0.00     0.00        1     0.00     0.00  ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::ArrangementList()
  0.00      0.00     0.00        1     0.00     0.00  LexicographicAnalyser::getResult(int, int)
  0.00      0.00     0.00        1     0.00     0.00  LexicographicAnalyser::LexicographicAnalyser()
  0.00      0.00     0.00        1     0.00     0.00  ArrangementListSorting<WordOccurence>::selectionSort(int, int, Item<WordOccurence>*, bool (*)(WordOccurence, WordOccurence, ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*))
  0.00      0.00     0.00        1     0.00     0.00  ArrangementListSorting<WordOccurence>::quickSortOrder(int, int, Item<WordOccurence>*, bool (*)(WordOccurence, WordOccurence, ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*))
  0.00      0.00     0.00        1     0.00     0.00  ArrangementListSorting<WordOccurence>::quickSort(Item<WordOccurence>*, bool (*)(WordOccurence, WordOccurence, ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*))
  0.00      0.00     0.00        1     0.00     0.00  ArrangementListSorting<WordOccurence>::ArrangementListSorting(int, ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, int, int)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2018 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) no time propagated

index % time    self  children    called     name
                0.00    0.00  122515/122515      void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [9]
[8]      0.0    0.00    0.00  122515         bool __gnu_cxx::__is_null_pointer<char>(char*) [8]
-----------------------------------------------
                0.00    0.00      27/122515      ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::create(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [66]
                0.00    0.00      27/122515      LexicographicAnalyser::readOrdering(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [67]
                0.00    0.00      65/122515      removeSpecialCharacters(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [61]
                0.00    0.00     130/122515      LexicographicAnalyser::readWord(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [64]
                0.00    0.00     130/122515      normalizeWord(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [60]
                0.00    0.00     280/122515      main [6]
                0.00    0.00    3192/122515      makeLexicographicalComparison(WordOccurence, WordOccurence, ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*) [43]
                0.00    0.00    6171/122515      ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::castStringKey(int) [23]
                0.00    0.00    6171/122515      void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type) [26]
                0.00    0.00   15724/122515      WordOccurence::WordOccurence(WordOccurence const&) [21]
                0.00    0.00   90598/122515      Item<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::Item(Item<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [16]
[9]      0.0    0.00    0.00  122515         void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [9]
                0.00    0.00  122515/122515      bool __gnu_cxx::__is_null_pointer<char>(char*) [8]
                0.00    0.00  122515/122515      std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*) [12]
-----------------------------------------------
                0.00    0.00  122515/122515      std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*) [12]
[10]     0.0    0.00    0.00  122515         std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag) [10]
-----------------------------------------------
                0.00    0.00  122515/122515      std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*) [12]
[11]     0.0    0.00    0.00  122515         std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&) [11]
-----------------------------------------------
                0.00    0.00  122515/122515      void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [9]
[12]     0.0    0.00    0.00  122515         std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*) [12]
                0.00    0.00  122515/122515      std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&) [11]
                0.00    0.00  122515/122515      std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag) [10]
-----------------------------------------------
                0.00    0.00       1/95940       finalizaMemLog() [79]
                0.00    0.00    1384/95940       escreveMemLog(long, long, int) [45]
                0.00    0.00   94555/95940       leMemLog(long, long, int) [14]
[13]     0.0    0.00    0.00   95940         clkDifMemLog(timespec, timespec, timespec*) [13]
-----------------------------------------------
                0.00    0.00     171/94555       ArrangementList<WordOccurence>::findByIndex(int) [52]
                0.00    0.00    3192/94555       ArrangementListSorting<WordOccurence>::selectionSort(int, int, Item<WordOccurence>*, bool (*)(WordOccurence, WordOccurence, ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*)) [93]
                0.00    0.00    3666/94555       ArrangementList<WordOccurence>::findIndex(char*, MemoryLogType) [54]
                0.00    0.00   87526/94555       ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::findIndex(char*, MemoryLogType) [30]
[14]     0.0    0.00    0.00   94555         leMemLog(long, long, int) [14]
                0.00    0.00   94555/95940       clkDifMemLog(timespec, timespec, timespec*) [13]
-----------------------------------------------
                0.00    0.00      27/90625       ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::create(char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [65]
                0.00    0.00    3072/90625       getLexicographicalValue(char, ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*) [37]
                0.00    0.00   87526/90625       ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::findIndex(char*, MemoryLogType) [30]
[15]     0.0    0.00    0.00   90625         Item<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~Item() [15]
-----------------------------------------------
                0.00    0.00    3072/90598       ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::findByKey(char*) [41]
                0.00    0.00   87526/90598       ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::findIndex(char*, MemoryLogType) [30]
[16]     0.0    0.00    0.00   90598         Item<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::Item(Item<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [16]
                0.00    0.00   90598/122515      void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [9]
-----------------------------------------------
                0.00    0.00      57/30228       LexicographicAnalyser::readWord(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [64]
                0.00    0.00   30171/30228       Item<WordOccurence>::Item() [18]
[17]     0.0    0.00    0.00   30228         WordOccurence::WordOccurence() [17]
-----------------------------------------------
                0.00    0.00     171/30171       ArrangementList<WordOccurence>::create(char*, WordOccurence) [53]
                0.00    0.00   30000/30171       ArrangementList<WordOccurence>::ArrangementList() [70]
[18]     0.0    0.00    0.00   30171         Item<WordOccurence>::Item() [18]
                0.00    0.00   30171/30228       WordOccurence::WordOccurence() [17]
-----------------------------------------------
                0.00    0.00      27/10027       ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::create(char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [65]
                0.00    0.00   10000/10027       ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::ArrangementList() [90]
[19]     0.0    0.00    0.00   10027         Item<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::Item() [19]
-----------------------------------------------
                0.00    0.00     114/8090        LexicographicAnalyser::getResult(int, int) [91]
                0.00    0.00     122/8090        LexicographicAnalyser::readWord(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [64]
                0.00    0.00    3192/8090        ArrangementListSorting<WordOccurence>::selectionSort(int, int, Item<WordOccurence>*, bool (*)(WordOccurence, WordOccurence, ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*)) [93]
                0.00    0.00    4662/8090        Item<WordOccurence>::~Item() [31]
[20]     0.0    0.00    0.00    8090         WordOccurence::~WordOccurence() [20]
-----------------------------------------------
                0.00    0.00      65/7862        LexicographicAnalyser::readWord(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [64]
                0.00    0.00     114/7862        LexicographicAnalyser::getResult(int, int) [91]
                0.00    0.00    3192/7862        ArrangementListSorting<WordOccurence>::selectionSort(int, int, Item<WordOccurence>*, bool (*)(WordOccurence, WordOccurence, ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*)) [93]
                0.00    0.00    4491/7862        Item<WordOccurence>::Item(Item<WordOccurence> const&) [32]
[21]     0.0    0.00    0.00    7862         WordOccurence::WordOccurence(WordOccurence const&) [21]
                0.00    0.00   15724/122515      void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [9]
-----------------------------------------------
                0.00    0.00       1/6424        main [6]
                0.00    0.00      65/6424        LexicographicAnalyser::readWord(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [64]
                0.00    0.00      93/6424        isOrderingConfig(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [58]
                0.00    0.00      94/6424        isTextConfig(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [56]
                0.00    0.00    6171/6424        ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::castStringKey(int) [23]
[22]     0.0    0.00    0.00    6424         castChar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [22]
-----------------------------------------------
                0.00    0.00      27/6171        ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::create(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [66]
                0.00    0.00    3072/6171        ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::findByKey(int) [42]
                0.00    0.00    3072/6171        ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::existsByKey(int) [39]
[23]     0.0    0.00    0.00    6171         ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::castStringKey(int) [23]
                0.00    0.00    6171/6171        std::__cxx11::to_string(int) [28]
                0.00    0.00    6171/122515      void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [9]
                0.00    0.00    6171/6424        castChar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [22]
-----------------------------------------------
                0.00    0.00    6171/6171        std::__cxx11::to_string(int) [28]
[24]     0.0    0.00    0.00    6171         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned long, char const*, __va_list_tag*), unsigned long, char const*, ...) [24]
                0.00    0.00    6171/6171        std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<char*, void>(char*, char*, std::allocator<char> const&) [27]
-----------------------------------------------
                0.00    0.00    6171/6171        std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<char*, void>(char*, char*, std::allocator<char> const&) [27]
[25]     0.0    0.00    0.00    6171         void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*) [25]
                0.00    0.00    6171/6171        void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type) [26]
-----------------------------------------------
                0.00    0.00    6171/6171        void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*) [25]
[26]     0.0    0.00    0.00    6171         void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type) [26]
                0.00    0.00    6171/122515      void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [9]
-----------------------------------------------
                0.00    0.00    6171/6171        std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned long, char const*, __va_list_tag*), unsigned long, char const*, ...) [24]
[27]     0.0    0.00    0.00    6171         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<char*, void>(char*, char*, std::allocator<char> const&) [27]
                0.00    0.00    6171/6171        void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*) [25]
-----------------------------------------------
                0.00    0.00    6171/6171        ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::castStringKey(int) [23]
[28]     0.0    0.00    0.00    6171         std::__cxx11::to_string(int) [28]
                0.00    0.00    6171/6171        std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned long, char const*, __va_list_tag*), unsigned long, char const*, ...) [24]
-----------------------------------------------
                0.00    0.00    3072/6144        ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::findByKey(char*) [41]
                0.00    0.00    3072/6144        ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::existsByKey(char*) [38]
[29]     0.0    0.00    0.00    6144         ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::existsByIndex(int) [29]
-----------------------------------------------
                0.00    0.00    3072/6144        ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::findByKey(char*) [41]
                0.00    0.00    3072/6144        ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::existsByKey(char*) [38]
[30]     0.0    0.00    0.00    6144         ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::findIndex(char*, MemoryLogType) [30]
                0.00    0.00   87526/90598       Item<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::Item(Item<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [16]
                0.00    0.00   87526/94555       leMemLog(long, long, int) [14]
                0.00    0.00   87526/90625       Item<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~Item() [15]
-----------------------------------------------
                0.00    0.00       8/4662        LexicographicAnalyser::readWord(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [64]
                0.00    0.00      57/4662        main [6]
                0.00    0.00     171/4662        ArrangementList<WordOccurence>::create(char*, WordOccurence) [53]
                0.00    0.00     171/4662        LexicographicAnalyser::getResult(int, int) [91]
                0.00    0.00     589/4662        ArrangementListSorting<WordOccurence>::selectionSort(int, int, Item<WordOccurence>*, bool (*)(WordOccurence, WordOccurence, ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*)) [93]
                0.00    0.00    3666/4662        ArrangementList<WordOccurence>::findIndex(char*, MemoryLogType) [54]
[31]     0.0    0.00    0.00    4662         Item<WordOccurence>::~Item() [31]
                0.00    0.00    4662/8090        WordOccurence::~WordOccurence() [20]
-----------------------------------------------
                0.00    0.00      65/4491        ArrangementList<WordOccurence>::findByKey(char*) [63]
                0.00    0.00     171/4491        ArrangementList<WordOccurence>::findByIndex(int) [52]
                0.00    0.00     589/4491        ArrangementListSorting<WordOccurence>::selectionSort(int, int, Item<WordOccurence>*, bool (*)(WordOccurence, WordOccurence, ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*)) [93]
                0.00    0.00    3666/4491        ArrangementList<WordOccurence>::findIndex(char*, MemoryLogType) [54]
[32]     0.0    0.00    0.00    4491         Item<WordOccurence>::Item(Item<WordOccurence> const&) [32]
                0.00    0.00    4491/7862        WordOccurence::WordOccurence(WordOccurence const&) [21]
-----------------------------------------------
                0.00    0.00     328/3462        removeSpecialCharacters(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [61]
                0.00    0.00    3134/3462        makeLexicographicalComparison(WordOccurence, WordOccurence, ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*) [43]
[33]     0.0    0.00    0.00    3462         isSpecialCharacter(char) [33]
-----------------------------------------------
                0.00    0.00      27/3427        LexicographicAnalyser::readOrdering(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [67]
                0.00    0.00     328/3427        lowerCaseWord(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [59]
                0.00    0.00    3072/3427        getLexicographicalValue(char, ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*) [37]
[34]     0.0    0.00    0.00    3427         lowerCaseLetter(char) [34]
                0.00    0.00    3427/3427        char std::tolower<char>(char, std::locale const&) [36]
-----------------------------------------------
                0.00    0.00    3427/3427        char std::tolower<char>(char, std::locale const&) [36]
[35]     0.0    0.00    0.00    3427         std::ctype<char>::tolower(char) const [35]
-----------------------------------------------
                0.00    0.00    3427/3427        lowerCaseLetter(char) [34]
[36]     0.0    0.00    0.00    3427         char std::tolower<char>(char, std::locale const&) [36]
                0.00    0.00    3427/3427        std::ctype<char>::tolower(char) const [35]
-----------------------------------------------
                0.00    0.00    3072/3072        makeLexicographicalComparison(WordOccurence, WordOccurence, ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*) [43]
[37]     0.0    0.00    0.00    3072         getLexicographicalValue(char, ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*) [37]
                0.00    0.00    3072/3427        lowerCaseLetter(char) [34]
                0.00    0.00    3072/3072        ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::existsByKey(int) [39]
                0.00    0.00    3072/3072        ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::findByKey(int) [42]
                0.00    0.00    3072/3072        ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::getSize() [40]
                0.00    0.00    3072/90625       Item<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~Item() [15]
-----------------------------------------------
                0.00    0.00    3072/3072        ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::existsByKey(int) [39]
[38]     0.0    0.00    0.00    3072         ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::existsByKey(char*) [38]
                0.00    0.00    3072/6144        ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::findIndex(char*, MemoryLogType) [30]
                0.00    0.00    3072/6144        ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::existsByIndex(int) [29]
-----------------------------------------------
                0.00    0.00    3072/3072        getLexicographicalValue(char, ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*) [37]
[39]     0.0    0.00    0.00    3072         ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::existsByKey(int) [39]
                0.00    0.00    3072/6171        ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::castStringKey(int) [23]
                0.00    0.00    3072/3072        ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::existsByKey(char*) [38]
-----------------------------------------------
                0.00    0.00    3072/3072        getLexicographicalValue(char, ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*) [37]
[40]     0.0    0.00    0.00    3072         ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::getSize() [40]
-----------------------------------------------
                0.00    0.00    3072/3072        ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::findByKey(int) [42]
[41]     0.0    0.00    0.00    3072         ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::findByKey(char*) [41]
                0.00    0.00    3072/6144        ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::findIndex(char*, MemoryLogType) [30]
                0.00    0.00    3072/6144        ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::existsByIndex(int) [29]
                0.00    0.00    3072/90598       Item<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::Item(Item<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [16]
-----------------------------------------------
                0.00    0.00    3072/3072        getLexicographicalValue(char, ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*) [37]
[42]     0.0    0.00    0.00    3072         ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::findByKey(int) [42]
                0.00    0.00    3072/6171        ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::castStringKey(int) [23]
                0.00    0.00    3072/3072        ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::findByKey(char*) [41]
-----------------------------------------------
                0.00    0.00    1596/1596        ArrangementListSorting<WordOccurence>::selectionSort(int, int, Item<WordOccurence>*, bool (*)(WordOccurence, WordOccurence, ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*)) [93]
[43]     0.0    0.00    0.00    1596         makeLexicographicalComparison(WordOccurence, WordOccurence, ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*) [43]
                0.00    0.00    3192/122515      void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [9]
                0.00    0.00    3134/3462        isSpecialCharacter(char) [33]
                0.00    0.00    3072/3072        getLexicographicalValue(char, ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*) [37]
-----------------------------------------------
                0.00    0.00       8/1528        ArrangementList<WordOccurence>::update(char*, WordOccurence) [69]
                0.00    0.00     171/1528        ArrangementList<WordOccurence>::create(char*, WordOccurence) [53]
                0.00    0.00    1349/1528        Item<WordOccurence>::operator=(Item<WordOccurence> const&) [46]
[44]     0.0    0.00    0.00    1528         WordOccurence::operator=(WordOccurence const&) [44]
-----------------------------------------------
                0.00    0.00       8/1384        ArrangementList<WordOccurence>::update(char*, WordOccurence) [69]
                0.00    0.00      27/1384        ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::create(char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [65]
                0.00    0.00     171/1384        ArrangementList<WordOccurence>::create(char*, WordOccurence) [53]
                0.00    0.00    1178/1384        ArrangementListSorting<WordOccurence>::selectionSort(int, int, Item<WordOccurence>*, bool (*)(WordOccurence, WordOccurence, ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*)) [93]
[45]     0.0    0.00    0.00    1384         escreveMemLog(long, long, int) [45]
                0.00    0.00    1384/95940       clkDifMemLog(timespec, timespec, timespec*) [13]
-----------------------------------------------
                0.00    0.00     171/1349        ArrangementList<WordOccurence>::create(char*, WordOccurence) [53]
                0.00    0.00    1178/1349        ArrangementListSorting<WordOccurence>::selectionSort(int, int, Item<WordOccurence>*, bool (*)(WordOccurence, WordOccurence, ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*)) [93]
[46]     0.0    0.00    0.00    1349         Item<WordOccurence>::operator=(Item<WordOccurence> const&) [46]
                0.00    0.00    1349/1528        WordOccurence::operator=(WordOccurence const&) [44]
-----------------------------------------------
                0.00    0.00     786/786         bool __gnu_cxx::operator!=<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [48]
[47]     0.0    0.00    0.00     786         __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::base() const [47]
-----------------------------------------------
                0.00    0.00     393/393         lowerCaseWord(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [59]
[48]     0.0    0.00    0.00     393         bool __gnu_cxx::operator!=<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [48]
                0.00    0.00     786/786         __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::base() const [47]
-----------------------------------------------
                0.00    0.00     328/328         lowerCaseWord(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [59]
[49]     0.0    0.00    0.00     328         __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++() [49]
-----------------------------------------------
                0.00    0.00     328/328         lowerCaseWord(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [59]
[50]     0.0    0.00    0.00     328         __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator*() const [50]
-----------------------------------------------
                0.00    0.00       1/175         ArrangementList<WordOccurence>::sort(bool (*)(WordOccurence, WordOccurence, ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*), ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, int, int) [89]
                0.00    0.00      58/175         main [6]
                0.00    0.00     116/175         LexicographicAnalyser::getResult(int, int) [91]
[51]     0.0    0.00    0.00     175         ArrangementList<WordOccurence>::getSize() [51]
-----------------------------------------------
                0.00    0.00      57/171         main [6]
                0.00    0.00     114/171         LexicographicAnalyser::getResult(int, int) [91]
[52]     0.0    0.00    0.00     171         ArrangementList<WordOccurence>::findByIndex(int) [52]
                0.00    0.00     171/94555       leMemLog(long, long, int) [14]
                0.00    0.00     171/4491        Item<WordOccurence>::Item(Item<WordOccurence> const&) [32]
-----------------------------------------------
                0.00    0.00      57/171         LexicographicAnalyser::readWord(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [64]
                0.00    0.00     114/171         LexicographicAnalyser::getResult(int, int) [91]
[53]     0.0    0.00    0.00     171         ArrangementList<WordOccurence>::create(char*, WordOccurence) [53]
                0.00    0.00     171/30171       Item<WordOccurence>::Item() [18]
                0.00    0.00     171/1528        WordOccurence::operator=(WordOccurence const&) [44]
                0.00    0.00     171/1349        Item<WordOccurence>::operator=(Item<WordOccurence> const&) [46]
                0.00    0.00     171/1384        escreveMemLog(long, long, int) [45]
                0.00    0.00     171/4662        Item<WordOccurence>::~Item() [31]
-----------------------------------------------
                0.00    0.00       8/138         ArrangementList<WordOccurence>::update(char*, WordOccurence) [69]
                0.00    0.00      65/138         ArrangementList<WordOccurence>::findByKey(char*) [63]
                0.00    0.00      65/138         ArrangementList<WordOccurence>::existsByKey(char*) [62]
[54]     0.0    0.00    0.00     138         ArrangementList<WordOccurence>::findIndex(char*, MemoryLogType) [54]
                0.00    0.00    3666/4491        Item<WordOccurence>::Item(Item<WordOccurence> const&) [32]
                0.00    0.00    3666/94555       leMemLog(long, long, int) [14]
                0.00    0.00    3666/4662        Item<WordOccurence>::~Item() [31]
-----------------------------------------------
                0.00    0.00      65/130         ArrangementList<WordOccurence>::findByKey(char*) [63]
                0.00    0.00      65/130         ArrangementList<WordOccurence>::existsByKey(char*) [62]
[55]     0.0    0.00    0.00     130         ArrangementList<WordOccurence>::existsByIndex(int) [55]
-----------------------------------------------
                0.00    0.00      94/94          main [6]
[56]     0.0    0.00    0.00      94         isTextConfig(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [56]
                0.00    0.00      94/6424        castChar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [22]
-----------------------------------------------
                0.00    0.00      93/93          main [6]
[57]     0.0    0.00    0.00      93         defineFaseMemLog(int) [57]
-----------------------------------------------
                0.00    0.00      93/93          main [6]
[58]     0.0    0.00    0.00      93         isOrderingConfig(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [58]
                0.00    0.00      93/6424        castChar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [22]
-----------------------------------------------
                0.00    0.00      65/65          normalizeWord(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [60]
[59]     0.0    0.00    0.00      65         lowerCaseWord(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [59]
                0.00    0.00     393/393         bool __gnu_cxx::operator!=<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [48]
                0.00    0.00     328/328         __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator*() const [50]
                0.00    0.00     328/3427        lowerCaseLetter(char) [34]
                0.00    0.00     328/328         __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++() [49]
-----------------------------------------------
                0.00    0.00      65/65          LexicographicAnalyser::readWord(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [64]
[60]     0.0    0.00    0.00      65         normalizeWord(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [60]
                0.00    0.00     130/122515      void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [9]
                0.00    0.00      65/65          lowerCaseWord(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [59]
                0.00    0.00      65/65          removeSpecialCharacters(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [61]
-----------------------------------------------
                0.00    0.00      65/65          normalizeWord(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [60]
[61]     0.0    0.00    0.00      65         removeSpecialCharacters(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [61]
                0.00    0.00     328/3462        isSpecialCharacter(char) [33]
                0.00    0.00      65/122515      void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [9]
-----------------------------------------------
                0.00    0.00      65/65          LexicographicAnalyser::readWord(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [64]
[62]     0.0    0.00    0.00      65         ArrangementList<WordOccurence>::existsByKey(char*) [62]
                0.00    0.00      65/138         ArrangementList<WordOccurence>::findIndex(char*, MemoryLogType) [54]
                0.00    0.00      65/130         ArrangementList<WordOccurence>::existsByIndex(int) [55]
-----------------------------------------------
                0.00    0.00       8/65          LexicographicAnalyser::readWord(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [64]
                0.00    0.00      57/65          LexicographicAnalyser::getResult(int, int) [91]
[63]     0.0    0.00    0.00      65         ArrangementList<WordOccurence>::findByKey(char*) [63]
                0.00    0.00      65/138         ArrangementList<WordOccurence>::findIndex(char*, MemoryLogType) [54]
                0.00    0.00      65/130         ArrangementList<WordOccurence>::existsByIndex(int) [55]
                0.00    0.00      65/4491        Item<WordOccurence>::Item(Item<WordOccurence> const&) [32]
-----------------------------------------------
                0.00    0.00      65/65          main [6]
[64]     0.0    0.00    0.00      65         LexicographicAnalyser::readWord(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [64]
                0.00    0.00     130/122515      void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [9]
                0.00    0.00     122/8090        WordOccurence::~WordOccurence() [20]
                0.00    0.00      65/65          normalizeWord(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [60]
                0.00    0.00      65/6424        castChar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [22]
                0.00    0.00      65/65          ArrangementList<WordOccurence>::existsByKey(char*) [62]
                0.00    0.00      65/7862        WordOccurence::WordOccurence(WordOccurence const&) [21]
                0.00    0.00      57/30228       WordOccurence::WordOccurence() [17]
                0.00    0.00      57/171         ArrangementList<WordOccurence>::create(char*, WordOccurence) [53]
                0.00    0.00       8/65          ArrangementList<WordOccurence>::findByKey(char*) [63]
                0.00    0.00       8/8           ArrangementList<WordOccurence>::update(char*, WordOccurence) [69]
                0.00    0.00       8/4662        Item<WordOccurence>::~Item() [31]
-----------------------------------------------
                0.00    0.00      27/27          ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::create(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [66]
[65]     0.0    0.00    0.00      27         ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::create(char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [65]
                0.00    0.00      27/10027       Item<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::Item() [19]
                0.00    0.00      27/27          Item<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator=(Item<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [68]
                0.00    0.00      27/1384        escreveMemLog(long, long, int) [45]
                0.00    0.00      27/90625       Item<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~Item() [15]
-----------------------------------------------
                0.00    0.00      27/27          LexicographicAnalyser::readOrdering(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [67]
[66]     0.0    0.00    0.00      27         ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::create(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [66]
                0.00    0.00      27/122515      void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [9]
                0.00    0.00      27/6171        ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::castStringKey(int) [23]
                0.00    0.00      27/27          ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::create(char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [65]
-----------------------------------------------
                0.00    0.00      27/27          main [6]
[67]     0.0    0.00    0.00      27         LexicographicAnalyser::readOrdering(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [67]
                0.00    0.00      27/3427        lowerCaseLetter(char) [34]
                0.00    0.00      27/122515      void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [9]
                0.00    0.00      27/27          ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::create(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [66]
-----------------------------------------------
                0.00    0.00      27/27          ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::create(char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [65]
[68]     0.0    0.00    0.00      27         Item<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator=(Item<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [68]
-----------------------------------------------
                0.00    0.00       8/8           LexicographicAnalyser::readWord(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [64]
[69]     0.0    0.00    0.00       8         ArrangementList<WordOccurence>::update(char*, WordOccurence) [69]
                0.00    0.00       8/138         ArrangementList<WordOccurence>::findIndex(char*, MemoryLogType) [54]
                0.00    0.00       8/1528        WordOccurence::operator=(WordOccurence const&) [44]
                0.00    0.00       8/1384        escreveMemLog(long, long, int) [45]
-----------------------------------------------
                0.00    0.00       1/3           LexicographicAnalyser::LexicographicAnalyser() [92]
                0.00    0.00       2/3           LexicographicAnalyser::getResult(int, int) [91]
[70]     0.0    0.00    0.00       3         ArrangementList<WordOccurence>::ArrangementList() [70]
                0.00    0.00   30000/30171       Item<WordOccurence>::Item() [18]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [121]
[71]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z13normalizeWordNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE [71]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [86]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [121]
[72]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z16isOrderingConfigNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE [72]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [81]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [121]
[73]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z8castCharNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE [73]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [87]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [121]
[74]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z9parseArgsiPPc [74]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [80]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [121]
[75]     0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN21LexicographicAnalyserC2Ev [75]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [85]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [121]
[76]     0.0    0.00    0.00       1         _GLOBAL__sub_I_main [76]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [82]
-----------------------------------------------
                0.00    0.00       1/1           main [6]
[77]     0.0    0.00    0.00       1         ativaMemLog() [77]
-----------------------------------------------
                0.00    0.00       1/1           main [6]
[78]     0.0    0.00    0.00       1         iniciaMemLog(char*) [78]
-----------------------------------------------
                0.00    0.00       1/1           main [6]
[79]     0.0    0.00    0.00       1         finalizaMemLog() [79]
                0.00    0.00       1/95940       clkDifMemLog(timespec, timespec, timespec*) [13]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z9parseArgsiPPc [74]
[80]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [80]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z16isOrderingConfigNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE [72]
[81]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [81]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_main [76]
[82]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [82]
-----------------------------------------------
                                   1             __static_initialization_and_destruction_0(int, int) [83]
                0.00    0.00       1/1           __libc_csu_init [121]
[83]     0.0    0.00    0.00       1+1       __static_initialization_and_destruction_0(int, int) [83]
                                   1             __static_initialization_and_destruction_0(int, int) [83]
-----------------------------------------------
                                   1             __static_initialization_and_destruction_0(int, int) [84]
                0.00    0.00       1/1           __libc_csu_init [121]
[84]     0.0    0.00    0.00       1+1       __static_initialization_and_destruction_0(int, int) [84]
                                   1             __static_initialization_and_destruction_0(int, int) [84]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN21LexicographicAnalyserC2Ev [75]
[85]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [85]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z13normalizeWordNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE [71]
[86]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [86]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z8castCharNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE [73]
[87]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [87]
-----------------------------------------------
                0.00    0.00       1/1           main [6]
[88]     0.0    0.00    0.00       1         parseArgs(int, char**) [88]
-----------------------------------------------
                0.00    0.00       1/1           LexicographicAnalyser::getResult(int, int) [91]
[89]     0.0    0.00    0.00       1         ArrangementList<WordOccurence>::sort(bool (*)(WordOccurence, WordOccurence, ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*), ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, int, int) [89]
                0.00    0.00       1/175         ArrangementList<WordOccurence>::getSize() [51]
                0.00    0.00       1/1           ArrangementListSorting<WordOccurence>::ArrangementListSorting(int, ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, int, int) [96]
                0.00    0.00       1/1           ArrangementListSorting<WordOccurence>::quickSort(Item<WordOccurence>*, bool (*)(WordOccurence, WordOccurence, ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*)) [95]
-----------------------------------------------
                0.00    0.00       1/1           LexicographicAnalyser::LexicographicAnalyser() [92]
[90]     0.0    0.00    0.00       1         ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::ArrangementList() [90]
                0.00    0.00   10000/10027       Item<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::Item() [19]
-----------------------------------------------
                0.00    0.00       1/1           main [6]
[91]     0.0    0.00    0.00       1         LexicographicAnalyser::getResult(int, int) [91]
                0.00    0.00     171/4662        Item<WordOccurence>::~Item() [31]
                0.00    0.00     116/175         ArrangementList<WordOccurence>::getSize() [51]
                0.00    0.00     114/171         ArrangementList<WordOccurence>::findByIndex(int) [52]
                0.00    0.00     114/7862        WordOccurence::WordOccurence(WordOccurence const&) [21]
                0.00    0.00     114/171         ArrangementList<WordOccurence>::create(char*, WordOccurence) [53]
                0.00    0.00     114/8090        WordOccurence::~WordOccurence() [20]
                0.00    0.00      57/65          ArrangementList<WordOccurence>::findByKey(char*) [63]
                0.00    0.00       2/3           ArrangementList<WordOccurence>::ArrangementList() [70]
                0.00    0.00       1/1           ArrangementList<WordOccurence>::sort(bool (*)(WordOccurence, WordOccurence, ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*), ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, int, int) [89]
-----------------------------------------------
                0.00    0.00       1/1           main [6]
[92]     0.0    0.00    0.00       1         LexicographicAnalyser::LexicographicAnalyser() [92]
                0.00    0.00       1/3           ArrangementList<WordOccurence>::ArrangementList() [70]
                0.00    0.00       1/1           ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::ArrangementList() [90]
-----------------------------------------------
                0.00    0.00       1/1           ArrangementListSorting<WordOccurence>::quickSortOrder(int, int, Item<WordOccurence>*, bool (*)(WordOccurence, WordOccurence, ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*)) [94]
[93]     0.0    0.00    0.00       1         ArrangementListSorting<WordOccurence>::selectionSort(int, int, Item<WordOccurence>*, bool (*)(WordOccurence, WordOccurence, ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*)) [93]
                0.00    0.00    3192/94555       leMemLog(long, long, int) [14]
                0.00    0.00    3192/7862        WordOccurence::WordOccurence(WordOccurence const&) [21]
                0.00    0.00    3192/8090        WordOccurence::~WordOccurence() [20]
                0.00    0.00    1596/1596        makeLexicographicalComparison(WordOccurence, WordOccurence, ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*) [43]
                0.00    0.00    1178/1349        Item<WordOccurence>::operator=(Item<WordOccurence> const&) [46]
                0.00    0.00    1178/1384        escreveMemLog(long, long, int) [45]
                0.00    0.00     589/4491        Item<WordOccurence>::Item(Item<WordOccurence> const&) [32]
                0.00    0.00     589/4662        Item<WordOccurence>::~Item() [31]
-----------------------------------------------
                0.00    0.00       1/1           ArrangementListSorting<WordOccurence>::quickSort(Item<WordOccurence>*, bool (*)(WordOccurence, WordOccurence, ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*)) [95]
[94]     0.0    0.00    0.00       1         ArrangementListSorting<WordOccurence>::quickSortOrder(int, int, Item<WordOccurence>*, bool (*)(WordOccurence, WordOccurence, ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*)) [94]
                0.00    0.00       1/1           ArrangementListSorting<WordOccurence>::selectionSort(int, int, Item<WordOccurence>*, bool (*)(WordOccurence, WordOccurence, ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*)) [93]
-----------------------------------------------
                0.00    0.00       1/1           ArrangementList<WordOccurence>::sort(bool (*)(WordOccurence, WordOccurence, ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*), ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, int, int) [89]
[95]     0.0    0.00    0.00       1         ArrangementListSorting<WordOccurence>::quickSort(Item<WordOccurence>*, bool (*)(WordOccurence, WordOccurence, ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*)) [95]
                0.00    0.00       1/1           ArrangementListSorting<WordOccurence>::quickSortOrder(int, int, Item<WordOccurence>*, bool (*)(WordOccurence, WordOccurence, ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*)) [94]
-----------------------------------------------
                0.00    0.00       1/1           ArrangementList<WordOccurence>::sort(bool (*)(WordOccurence, WordOccurence, ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*), ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, int, int) [89]
[96]     0.0    0.00    0.00       1         ArrangementListSorting<WordOccurence>::ArrangementListSorting(int, ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, int, int) [96]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2018 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

  [71] _GLOBAL__sub_I__Z13normalizeWordNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE (lexicographic-util.cpp) [14] leMemLog(long, long, int) [92] LexicographicAnalyser::LexicographicAnalyser()
  [72] _GLOBAL__sub_I__Z16isOrderingConfigNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE (app-validation.cpp) [88] parseArgs(int, char**) [93] ArrangementListSorting<WordOccurence>::selectionSort(int, int, Item<WordOccurence>*, bool (*)(WordOccurence, WordOccurence, ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*))
  [73] _GLOBAL__sub_I__Z8castCharNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE (shared-util.cpp) [17] WordOccurence::WordOccurence() [94] ArrangementListSorting<WordOccurence>::quickSortOrder(int, int, Item<WordOccurence>*, bool (*)(WordOccurence, WordOccurence, ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*))
  [74] _GLOBAL__sub_I__Z9parseArgsiPPc (app-util.cpp) [21] WordOccurence::WordOccurence(WordOccurence const&) [95] ArrangementListSorting<WordOccurence>::quickSort(Item<WordOccurence>*, bool (*)(WordOccurence, WordOccurence, ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*))
  [75] _GLOBAL__sub_I__ZN21LexicographicAnalyserC2Ev (lexicographic-analyser.cpp) [20] WordOccurence::~WordOccurence() [96] ArrangementListSorting<WordOccurence>::ArrangementListSorting(int, ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, int, int)
  [76] _GLOBAL__sub_I_main (app.cpp) [44] WordOccurence::operator=(WordOccurence const&) [32] Item<WordOccurence>::Item(Item<WordOccurence> const&)
  [77] ativaMemLog()          [62] ArrangementList<WordOccurence>::existsByKey(char*) [18] Item<WordOccurence>::Item()
  [13] clkDifMemLog(timespec, timespec, timespec*) [52] ArrangementList<WordOccurence>::findByIndex(int) [31] Item<WordOccurence>::~Item()
  [78] iniciaMemLog(char*)    [55] ArrangementList<WordOccurence>::existsByIndex(int) [46] Item<WordOccurence>::operator=(Item<WordOccurence> const&)
  [56] isTextConfig(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [89] ArrangementList<WordOccurence>::sort(bool (*)(WordOccurence, WordOccurence, ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*), ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, int, int) [19] Item<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::Item()
  [45] escreveMemLog(long, long, int) [53] ArrangementList<WordOccurence>::create(char*, WordOccurence) [16] Item<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::Item(Item<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
  [59] lowerCaseWord(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [69] ArrangementList<WordOccurence>::update(char*, WordOccurence) [15] Item<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~Item()
  [60] normalizeWord(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [51] ArrangementList<WordOccurence>::getSize() [68] Item<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator=(Item<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
  [79] finalizaMemLog()       [63] ArrangementList<WordOccurence>::findByKey(char*) [24] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned long, char const*, __va_list_tag*), unsigned long, char const*, ...)
  [34] lowerCaseLetter(char)  [54] ArrangementList<WordOccurence>::findIndex(char*, MemoryLogType) [8] bool __gnu_cxx::__is_null_pointer<char>(char*)
  [57] defineFaseMemLog(int)  [70] ArrangementList<WordOccurence>::ArrangementList() [49] __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++()
  [58] isOrderingConfig(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [38] ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::existsByKey(char*) [48] bool __gnu_cxx::operator!=<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
  [33] isSpecialCharacter(char) [39] ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::existsByKey(int) [47] __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::base() const
  [37] getLexicographicalValue(char, ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*) [23] ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::castStringKey(int) [50] __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator*() const
  [61] removeSpecialCharacters(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [29] ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::existsByIndex(int) [35] std::ctype<char>::tolower(char) const
  [43] makeLexicographicalComparison(WordOccurence, WordOccurence, ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*) [65] ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::create(char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [25] void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*)
  [80] __static_initialization_and_destruction_0(int, int) (app-util.cpp) [66] ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::create(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [9] void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)
  [81] __static_initialization_and_destruction_0(int, int) (app-validation.cpp) [40] ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::getSize() [26] void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type)
  [82] __static_initialization_and_destruction_0(int, int) (app.cpp) [41] ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::findByKey(char*) [27] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<char*, void>(char*, char*, std::allocator<char> const&)
  [83] __static_initialization_and_destruction_0(int, int) (arrangement-list-sorting.cpp) [42] ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::findByKey(int) [28] std::__cxx11::to_string(int)
  [84] __static_initialization_and_destruction_0(int, int) (arrangement-list.cpp) [30] ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::findIndex(char*, MemoryLogType) [10] std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag)
  [85] __static_initialization_and_destruction_0(int, int) (lexicographic-analyser.cpp) [90] ArrangementList<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::ArrangementList() [11] std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&)
  [86] __static_initialization_and_destruction_0(int, int) (lexicographic-util.cpp) [67] LexicographicAnalyser::readOrdering(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [36] char std::tolower<char>(char, std::locale const&)
  [87] __static_initialization_and_destruction_0(int, int) (shared-util.cpp) [64] LexicographicAnalyser::readWord(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [12] std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*)
  [22] castChar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [91] LexicographicAnalyser::getResult(int, int)
